{"version":3,"sources":["webpack:///./src/components/resumeJobs.js","webpack:///./src/components/resumeProficiencies.js","webpack:///./src/pages/resume.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js"],"names":["ResumeJobs","react_default","a","createElement","gatsby_browser_entry","query","render","data","jobsArray","allResumeJobsJson","edges","forEach","item","push","key","node","company","className","daterange","href","url","roleList","roles","role","title","dangerouslySetInnerHTML","__html","description","getRoleList","listJobs","_4113164175","ResumeProficiencies","proficienciesArray","allResumeProficienciesJson","languages","langWrap","lang","skills","skillWrap","skill","tools","toolWrap","tool","listProficiencies","_2307060274","printPage","window","print","Resume","require","Fragment","Helmet","id","header","headerText","resumeJobs","resumeProficiencies","onClick","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","gatsby__WEBPACK_IMPORTED_MODULE_1__","to"],"mappings":"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","file":"component---src-pages-resume-js-80af3cce1b685fcef852.js","sourcesContent":["import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction ResumeJobs () {\n    return <StaticQuery\n    query={graphql`\n      query ResumeJobsQuery {\n        allResumeJobsJson {\n          edges {\n            node {\n                company\n                daterange\n                url\n                roles {\n                  title\n                  description\n                }\n            }\n          }\n        }\n      }\n    `}\n    render={data => (listJobs(data))}\n  />\n}\n\nfunction listJobs(data) {\n  const jobsArray = [];\n  data.allResumeJobsJson.edges.forEach(item => {\n    jobsArray.push(\n      <div key={item.node.company}>\n        <span className=\"job-daterange\">{item.node.daterange}</span>\n        <h3><a href={item.node.url}>{item.node.company}</a></h3>\n        {getRoleList(item)}\n      </div>\n    )\n  }); \n  return jobsArray;\n}\n\nfunction getRoleList(item) {\n  let roleList = [];\n  item.node.roles.forEach(role => {\n    roleList.push(<div key={role.title}><h4>{role.title}</h4><p dangerouslySetInnerHTML={{__html: role.description}}></p></div>);\n  });\n  return roleList;\n}\n\nexport default ResumeJobs","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction ResumeProficiencies () {\n  return <StaticQuery\n  query={graphql`\n    query ResumeProficienciesQuery {\n      allResumeProficienciesJson {\n        edges {\n          node {\n            languages\n            tools\n            skills\n          }\n        }\n      }\n    }\n  `}\n  render={data => (listProficiencies(data))}\n/>\n}\n\nfunction listProficiencies(data) {\n  // this is weird and bad\n  const proficienciesArray = [];\n  data.allResumeProficienciesJson.edges.forEach(item => {\n    if (item.node.languages) {\n      let langWrap = [];\n      langWrap.push(<dt key=\"section-1\">Languages</dt>);\n      item.node.languages.forEach(lang => {\n        langWrap.push(<dd key={lang}>{lang}</dd>);\n      });\n      proficienciesArray.push(<dl key=\"lang-wrap\">{langWrap}</dl>);\n    }\n    if (item.node.skills) {\n      let skillWrap = [];\n      skillWrap.push(<dt key=\"section-2\">Skills</dt>);\n      item.node.skills.forEach(skill => {\n        skillWrap.push(<dd key={skill}>{skill}</dd>);\n      });\n      proficienciesArray.push(<dl key=\"skill-wrap\">{skillWrap}</dl>);\n    }\n    if (item.node.tools) {\n      let toolWrap = [];\n      toolWrap.push(<dt key=\"section-3\">Tools</dt>);\n      item.node.tools.forEach(tool => {\n        toolWrap.push(<dd key={tool}>{tool}</dd>);\n      });\n      proficienciesArray.push(<dl key=\"tool-wrap\">{toolWrap}</dl>);\n    }\n  });\n  return proficienciesArray;\n}\n\n/*\n@todo refactor the above into something like this\nfunction buildProfList(data, section) {\n  const profList = [];\n  if (item.node.$section) {\n    let wrap = [];\n    wrap.push(<dt key=\"section-{section}\">{section}</dt>);\n    item.node.section.forEach(x => {\n      wrap.push(<dd key={x}>{x}</dd>);\n    });\n    proficienciesArray.push(<dl key=\"{section}-wrap\">{wrap}</dl>);\n  }\n  return profList;\n}*/\n\nexport default ResumeProficiencies","import React from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport Header from \"../components/header\"\nimport Jobs from \"../components/resumeJobs\"\nimport Proficiencies from \"../components/resumeProficiencies\"\n\nfunction Resume () {\n  require('../styles/resume.css')\n\n  return <><Helmet>\n    <title>Sarah German | Resume</title>\n  </Helmet>\n  \n  <div id=\"resume-wrapper\">\n    <div id=\"resume\">\n      <header>\n        <div id=\"mynameis\">\n          <Header headerText=\"Sarah German\"></Header>\n        </div>\n      </header>\n      <section className=\"jobs\">\n        <article>\n          <h2>Experience</h2>\n          <Jobs></Jobs>\n        </article>\n        <aside>\n          <h2>Proficiencies</h2>\n          <Proficiencies></Proficiencies>\n        </aside>\n      </section>\n    </div>\n    <div id=\"print\" onClick={printPage}>Print this Page</div>\n  </div></>\n}\n\nfunction printPage() {\n  window.print();\n}\n\nexport default Resume\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nfunction headerText(props) {\n    return <h1><Link to=\"/\">{props.headerText}</Link></h1>\n}\n\nexport default headerText"],"sourceRoot":""}